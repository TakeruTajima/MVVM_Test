<?xml version="1.0" encoding="utf-8"?>
<!--    data binding を行う場合、対象のレイアウトファイルを<layout>で括る。
        ビルド時に "対象のレイアウトファイル名のパスカルケース+Binding"という命名規則で
        Bindingクラスが生成される。-->
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">
<!--    ここでBindするViewModelの指定を行う。
        variable = 変数                                    -->
    <data>
        <variable
            name="view_model"
            type="com.mr2.mvvm_test.ui.main.MainViewModel" />
        <import type="androidx.core.content.ContextCompat"/>
<!--        <import type="android.view.View"/>-->
    </data>
    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/main"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".ui.main.MainFragment">

        <!--        android:text="@={view_model.liveDataText}"
                                   ^
                    通常のDataBindingは "@{view_model.liveDataText}"
                    双方向では@の後ろに=をつけて "@={view_model.liveDataText}"と指定する。
                    対象のメンバのスコープはpublicにしないとerrorでた。                     -->
        <EditText
            android:id="@+id/editText"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="@={ view_model.liveDataText }"
            app:layout_constraintEnd_toEndOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toTopOf="parent" />

        <TextView
            android:id="@+id/message"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textColor="@{ view_model.liveDataColor }"
            android:text="@{ `length: ` + view_model.liveDataText.length() }"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintTop_toBottomOf="@+id/editText" />
<!--        android:textColor="@{ context.getColor(view_model.liveDataColor) }"-->

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>